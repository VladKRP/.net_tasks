//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FolderListener.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Messages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Messages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FolderListener.Resources.Messages", typeof(Messages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FolderListenerConfigurationSection cannot be null.
        /// </summary>
        internal static string ConfigurationArgumentNullException {
            get {
                return ResourceManager.GetString("ConfigurationArgumentNullException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File already placed in proper directory.
        /// </summary>
        internal static string FileAlreadyInProperFolder {
            get {
                return ResourceManager.GetString("FileAlreadyInProperFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Change file name rules.
        /// </summary>
        internal static string FileChangeRules {
            get {
                return ResourceManager.GetString("FileChangeRules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File was created.
        /// </summary>
        internal static string FileCreated {
            get {
                return ResourceManager.GetString("FileCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creation date.
        /// </summary>
        internal static string FileCreationDate {
            get {
                return ResourceManager.GetString("FileCreationDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is last moving date enabled in file name?.
        /// </summary>
        internal static string FileLastMovingDate {
            get {
                return ResourceManager.GetString("FileLastMovingDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File was moved.
        /// </summary>
        internal static string FileMoved {
            get {
                return ResourceManager.GetString("FileMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        internal static string FileName {
            get {
                return ResourceManager.GetString("FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File name changed.
        /// </summary>
        internal static string FileNameChanged {
            get {
                return ResourceManager.GetString("FileNameChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Is serial number in name enabled?.
        /// </summary>
        internal static string FileSerialNumber {
            get {
                return ResourceManager.GetString("FileSerialNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder listening started.
        /// </summary>
        internal static string ListeningStarted {
            get {
                return ResourceManager.GetString("ListeningStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New file found.
        /// </summary>
        internal static string NewFileFound {
            get {
                return ResourceManager.GetString("NewFileFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No FileSystemWatchers configured to listen your folders..
        /// </summary>
        internal static string NoWatchersException {
            get {
                return ResourceManager.GetString("NoWatchersException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Such situation can appear when configuration file do not contain folders pathes to listen..
        /// </summary>
        internal static string NoWatchersExceptionDescription {
            get {
                return ResourceManager.GetString("NoWatchersExceptionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check project configuration file on section folderListenerConfigurationSection and folder pathes in it. While you not found such section or it empty, add section or folder pathes. .
        /// </summary>
        internal static string NoWatchersExceptionResolveCases {
            get {
                return ResourceManager.GetString("NoWatchersExceptionResolveCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File match with template.
        /// </summary>
        internal static string RuleMatched {
            get {
                return ResourceManager.GetString("RuleMatched", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File did not match with template.
        /// </summary>
        internal static string RuleNotMatched {
            get {
                return ResourceManager.GetString("RuleNotMatched", resourceCulture);
            }
        }
    }
}
